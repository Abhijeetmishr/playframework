# Copyright (C) Lightbend Inc. <https://www.lightbend.com>

play {

  modules {
    enabled += "play.api.db.evolutions.EvolutionsModule"
  }

  # Evolutions configuration
  evolutions {

    # Whether evolutions are enabled
    enabled = true

    # Database schema in which the generated evolution and lock tables will be saved to
    schema = ""

    # Table in which to store the evolutions' meta data
    metaTable = "play_evolutions"

    # Whether evolution updates should be performed with autocommit or in a manually managed transaction
    autocommit = true

    # Whether locks should be used when apply evolutions.  If this is true, a locks table will be created, and will
    # be used to synchronise between multiple Play instances trying to apply evolutions.  Set this to true in a multi
    # node environment.
    useLocks = false

    # Whether evolutions should be automatically applied.  In prod mode, this will only apply ups, in dev mode, it will
    # cause both ups and downs to be automatically applied.
    autoApply = false

    # Whether downs should be automatically applied.  This must be used in combination with autoApply, and only applies
    # to prod mode.
    autoApplyDowns = false

    # Whether evolutions should be skipped, if the scripts are all down.
    skipApplyDownsOnly = false

    # Variable substitution configuration
    substitutions {

      # Prefix of the variable to substitute. Will be combined with curly braces, e.g. "${my_variable}".
      prefix = "$"

      # If enabled, the syntax "${!...}" can be used to escape variable substitution. E.g. "${!my_variable}"
      # will not be replaced with its substitution but instead will become "${my_variable}" in the final sql.
      # Be aware: This escape mechanism will be applied to all "${!...}" placeholders, no matter if a mapping for
      # a variable is defined in the "mappings" config or not.
      # Disabled by default, for backward compatibility reasons, to not escape variables that are not meant to.
      escapeEnabled = false

      # Mappings of variables (without the prefix and curly braces) with their replacements.
      # A mapping key is not allowed to contain any of the following four characters: { } ! $ \
      mappings = {
        # my_variable = "some_string"
      }
    }

    # Db specific configuration. Should be a map of db names to configuration in the same format as this.
    db {

    }
  }
}
