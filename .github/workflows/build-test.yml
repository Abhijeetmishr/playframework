name: Check

on:
  pull_request: # Check Pull Requests

  push:
    branches:
      - main # Check main branch after merge

  schedule:
    - cron: "0 4 * * *" # Nightly build (@daily)

concurrency:
  # Only run once for latest commit per ref and cancel other (previous) runs.
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  extra-vars:
    name: Extra variables
    runs-on: ubuntu-20.04
    outputs:
      akka_version_opts: ${{ steps.akka-snapshots.outputs.akka_opts }}
      akka_http_version_opts: ${{ steps.akka-snapshots.outputs.akka_http_opts }}
    steps:
      - id: akka-snapshots
        run: |
          if [ "$GITHUB_EVENT_NAME" = "schedule" ]; then
            AKKA_VERSION=$(curl -s https://oss.sonatype.org/content/repositories/snapshots/com/typesafe/akka/akka-actor_2.13/ | grep -oEi '2\.6\.[0-9]+\+[RCM0-9]+-[0-9a-f]{8}-SNAPSHOT' | sort -V | tail -n 1)
            AKKA_HTTP_VERSION=$(curl -s https://oss.sonatype.org/content/repositories/snapshots/com/typesafe/akka/akka-http-core_2.13/ | grep -oEi '10\.1\.[0-9]+\+[RCM0-9]+-[0-9a-f]{8}-SNAPSHOT' | sort -V | tail -n 1)
            echo "::set-output name=akka_opts::-Dakka.version=$AKKA_VERSION"
            echo "::set-output name=akka_http_opts::-Dakka.http.version=$AKKA_HTTP_VERSION"
          else
            echo "::set-output name=akka_opts::"
            echo "::set-output name=akka_http_opts::"
          fi

  prefetch-for-caching:
    name: Prefetch dependencies and JVMs for caching
    uses: playframework/.github/.github/workflows/sbt.yml@v1
    with:
      cmd: |
        if [ "$CACHE_HIT_COURSIER" = "false" ]; then
          sbt +update                                             # Runs with adoptium:8 (default)
          # sbt --sbt-version 1.6.2 +update                       # If we run scripted tests with multiple sbt versions, we could init that sbt installs here
          sbt +mimaPreviousClassfiles                             # Fetches previous artifacts
          cd documentation && sbt +update && cd ..                # Fetches dependencies of the documentation project
          sbt -java-home `cs java-home --jvm adoptium:11` exit    # Init sbt with new JVM that will be downloaded
          sbt -java-home `cs java-home --jvm adoptium:17` exit    # Init sbt with new JVM that will be downloaded
        fi

  check-code-style:
    name: Code Style # scalafmt, javafmt, file headers, akka version check
    needs:
      - "extra-vars"
      - "prefetch-for-caching"
    uses: playframework/.github/.github/workflows/sbt.yml@v1
    with:
      cmd: sbt "${{needs.extra-vars.outputs.akka_version_opts}}" "${{needs.extra-vars.outputs.akka_http_version_opts}}" validateCode

  check-binary-compatibility:
    name: Binary Compatibility
    needs: "prefetch-for-caching"
    uses: playframework/.github/.github/workflows/binary-check.yml@v1

  check-code-style-docs:
    name: Code Style Docs
    needs: "prefetch-for-caching"
    uses: playframework/.github/.github/workflows/sbt.yml@v1
    with:
      cmd: |
        cd documentation
        sbt validateCode

  publish-local-jdk8:
    name: Publish Local
    needs:
      - "extra-vars"
      - "check-code-style"
      - "check-binary-compatibility"
      - "check-code-style-docs"
    uses: playframework/.github/.github/workflows/sbt.yml@v1
    with:
      java: 8
      cmd: |
        rm -rf ~/.ivy2/local
        sbt "${{needs.extra-vars.outputs.akka_version_opts}}" "${{needs.extra-vars.outputs.akka_http_version_opts}}" crossScalaVersions crossSbtVersions +publishLocal
      cache-path: ~/.ivy2/local/com.typesafe.play
      cache-key: play-published-local-jdk8-${{ github.sha }}-${{ github.event_name != 'schedule' || github.run_id }}

  publish-local-jdk11:
    name: Publish Local
    needs:
      - "extra-vars"
      - "check-code-style"
      - "check-binary-compatibility"
      - "check-code-style-docs"
    uses: playframework/.github/.github/workflows/sbt.yml@v1
    with:
      java: 11
      cmd: |
        rm -rf ~/.ivy2/local
        sbt "${{needs.extra-vars.outputs.akka_version_opts}}" "${{needs.extra-vars.outputs.akka_http_version_opts}}" crossScalaVersions crossSbtVersions +publishLocal
      cache-path: ~/.ivy2/local/com.typesafe.play
      cache-key: play-published-local-jdk11-${{ github.sha }}

  check-microbenchmarks:
    name: Microbenchmarks
    if: github.event_name == 'schedule' # Very slowly, only for nightly-build
    needs:
      - "extra-vars"
      - "check-code-style"
      - "check-binary-compatibility"
      - "check-code-style-docs"
    uses: playframework/.github/.github/workflows/sbt.yml@v1
    with:
      # Don't build first, let sbt automatically build any dependencies that are needed when we run the microbenchmarks.
      # This should be quicker than doing an explicit publish step.
      # Just run single iteration of microbenchmark to test that they run properly.
      # The results will be inaccurate, but this ensures that the microbenchmarks at least compile and run.
      # foe = FailOnError http://mail.openjdk.java.net/pipermail/jmh-dev/2015-February/001685.html
      cmd: sbt "${{needs.extra-vars.outputs.akka_version_opts}}" "${{needs.extra-vars.outputs.akka_http_version_opts}}" "Play-Microbenchmark/jmh:run -i 1 -wi 0 -f 1 -t 1 -foe=true"

  tests:
    name: Tests
    needs:
      - "extra-vars"
      - "check-code-style"
      - "check-binary-compatibility"
      - "check-code-style-docs"
    uses: playframework/.github/.github/workflows/sbt.yml@v1
    with:
      java: 11
      scala: 2.13.8
      cmd: sbt "${{needs.extra-vars.outputs.akka_version_opts}}" "${{needs.extra-vars.outputs.akka_http_version_opts}}" ++$SCALA_VERSION test

  it-tests:
    name: Integration Tests
    needs:
      - "extra-vars"
      - "check-code-style"
      - "check-binary-compatibility"
      - "check-code-style-docs"
    uses: playframework/.github/.github/workflows/sbt.yml@v1
    with:
      java: 11
      scala: 2.13.8
      cmd: sbt "${{needs.extra-vars.outputs.akka_version_opts}}" "${{needs.extra-vars.outputs.akka_http_version_opts}}" ++$SCALA_VERSION Play-Integration-Test/It/test

  docs-tests:
    name: Docs Tests
    needs:
      - "extra-vars"
      - "check-code-style"
      - "check-binary-compatibility"
      - "check-code-style-docs"
    uses: playframework/.github/.github/workflows/sbt.yml@v1
    with:
      java: 11
      scala: 2.13.8
      cmd: cd documentation && sbt "${{needs.extra-vars.outputs.akka_version_opts}}" "${{needs.extra-vars.outputs.akka_http_version_opts}}" ++$SCALA_VERSION test

  scripted-tests-1:
    name: Scripted Tests (1 of 3)
    needs:
      - "extra-vars"
      - "publish-local-jdk8"
    uses: playframework/.github/.github/workflows/sbt.yml@v1
    with:
      scala: 2.13.8
      env: SBT_VERSION=1.6.2
      cmd: >-
        sbt "${{needs.extra-vars.outputs.akka_version_opts}}" "${{needs.extra-vars.outputs.akka_http_version_opts}}" "
          project Sbt-Plugin;
          set scriptedSbt := \"$SBT_VERSION\";
          set scriptedLaunchOpts += \"-Dscala.version=$SCALA_VERSION\";
          show scriptedSbt;
          show scriptedLaunchOpts;
          scripted play-sbt-plugin/*1of3
        "
      cache-path: ~/.ivy2/local/com.typesafe.play
      cache-key: play-published-local-jdk8-${{ github.sha }}-${{ github.event_name != 'schedule' || github.run_id }}

  scripted-tests-2:
    name: Scripted Tests (2 of 3)
    needs:
      - "extra-vars"
      - "publish-local-jdk8"
    uses: playframework/.github/.github/workflows/sbt.yml@v1
    with:
      scala: 2.13.8
      env: SBT_VERSION=1.6.2
      cmd: >-
        sbt "${{needs.extra-vars.outputs.akka_version_opts}}" "${{needs.extra-vars.outputs.akka_http_version_opts}}" "
          project Sbt-Plugin;
          set scriptedSbt := \"$SBT_VERSION\";
          set scriptedLaunchOpts += \"-Dscala.version=$SCALA_VERSION\";
          show scriptedSbt;
          show scriptedLaunchOpts;
          scripted play-sbt-plugin/*2of3
        "
      cache-path: ~/.ivy2/local/com.typesafe.play
      cache-key: play-published-local-jdk8-${{ github.sha }}-${{ github.event_name != 'schedule' || github.run_id }}

  scripted-tests-3:
    name: Scripted Tests (3 of 3)
    needs:
      - "extra-vars"
      - "publish-local-jdk8"
    uses: playframework/.github/.github/workflows/sbt.yml@v1
    with:
      scala: 2.13.8
      env: SBT_VERSION=1.6.2
      cmd: >-
        sbt "${{needs.extra-vars.outputs.akka_version_opts}}" "${{needs.extra-vars.outputs.akka_http_version_opts}}" "
          project Sbt-Plugin;
          set scriptedSbt := \"$SBT_VERSION\";
          set scriptedLaunchOpts += \"-Dscala.version=$SCALA_VERSION\";
          show scriptedSbt;
          show scriptedLaunchOpts;
          scripted play-sbt-plugin/*3of3
        "
      cache-path: ~/.ivy2/local/com.typesafe.play
      cache-key: play-published-local-jdk8-${{ github.sha }}-${{ github.event_name != 'schedule' || github.run_id }}

  finish:
    name: Finish
    if: github.event_name == 'pull_request'
    needs: # Should be last
      - "tests"
      - "it-tests"
      - "docs-tests"
      - "scripted-tests-1"
      - "scripted-tests-2"
      - "scripted-tests-3"
    uses: playframework/.github/.github/workflows/rtm.yml@v1
