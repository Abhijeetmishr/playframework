#!/usr/bin/env bash

# Copyright (C) Lightbend Inc. <https://www.lightbend.com>

# shellcheck source=scripts/scriptLib
. "$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/scriptLib"

cd "$BASEDIR"

start scripted "RUNNING SCRIPTED TESTS FOR SBT $SBT_VERSION AND SCALA $SCALA_VERSION"

if [ "$TRAVIS" = "true" ]; then
  # Make sure scripted tests run with the same git commit that was used for the publish-local job.
  # For each CI job the CI server always clones the latest up-to-date base branch and, if the current job is for a pull request,
  # then "fetches" the current pull request on top of it (just look at the logs of a PR job, you will see "git fetch origin +refs/pull/<#PR>/merge").
  # Now if another pull request gets merged in the time window during the publish-local and a scripted job, the base branches moves forward
  # and the CI server will now clone that newer base branch before "fetching" the current PR on it. Of course now the commit hash has changed and
  # the distance from the latest tag has increased, so the Play version set by dynver will be different than the one used for publish-local, resulting
  # in "unresolved dependencies" errors.
  PUBLISHED_LOCAL_COMMIT_HASH=$(cat $HOME/.ivy2/local/com.typesafe.play/PUBLISHED_LOCAL_COMMIT_HASH)
  git fetch origin ${PUBLISHED_LOCAL_COMMIT_HASH}
  git checkout ${PUBLISHED_LOCAL_COMMIT_HASH}
  echo "Checked out git commit ${PUBLISHED_LOCAL_COMMIT_HASH} which was used for publish-local in previous job"
fi
end scripted "ALL SCRIPTED TESTS PASSED"
